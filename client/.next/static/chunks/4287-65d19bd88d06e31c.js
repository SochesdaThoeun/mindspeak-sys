"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4287],{54287:(e,a,r)=>{r.d(a,{ET:()=>f,Ay:()=>S,VM:()=>c,Lx:()=>i,y4:()=>d,DY:()=>u,eg:()=>g});var s=r(66439),t=r(13984);let o={register:async e=>{try{let a;if(console.log("\uD83D\uDD10 Auth Service: Starting user registration",{email:e.email,name:e.name,isAnonymous:e.is_anonymous||!1}),e.avatar){let r=new FormData;r.append("name",e.name),r.append("email",e.email),r.append("password",e.password),r.append("password_confirmation",e.password_confirmation),e.bio&&r.append("bio",e.bio),r.append("is_anonymous",e.is_anonymous?"true":"false"),r.append("avatar",e.avatar),console.log("\uD83D\uDCCE Auth Service: Avatar file attached for registration"),a=await t.FH.post("/register",r,{headers:{"Content-Type":"multipart/form-data"}})}else{let r={name:e.name,email:e.email,password:e.password,password_confirmation:e.password_confirmation,bio:e.bio||"",is_anonymous:e.is_anonymous};console.log("\uD83D\uDCE4 Auth Service: Sending JSON registration payload",{...r,password:"[REDACTED]",password_confirmation:"[REDACTED]"}),a=await t.FH.post("/register",r,{headers:{"Content-Type":"application/json"}})}return a.data.success&&a.data.data.token&&((0,t.O5)(a.data.data.token,a.data.data.user),console.log("✅ Auth Service: Registration successful",{userId:a.data.data.user.id,userName:a.data.data.user.name,userRole:a.data.data.user.role,tokenReceived:!!a.data.data.token})),a.data}catch(u){var a,r,s,o,l,n;console.error("❌ Auth Service: Registration failed",{error:(null==(a=u.response)?void 0:a.data)||u.message,status:null==(r=u.response)?void 0:r.status});let e=(null==(o=u.response)||null==(s=o.data)?void 0:s.message)||"Registration failed",t=null==(n=u.response)||null==(l=n.data)?void 0:l.errors;throw{...u,response:{...u.response,data:{success:!1,message:e,errors:t}}}}},login:async e=>{try{console.log("\uD83D\uDD10 Auth Service: Starting user login",{email:e.email});let a=await t.FH.post("/login",e);return a.data.success&&a.data.data.token&&((0,t.O5)(a.data.data.token,a.data.data.user),console.log("✅ Auth Service: Login successful",{userId:a.data.data.user.id,userName:a.data.data.user.name,userRole:a.data.data.user.role,tokenReceived:!!a.data.data.token})),a.data}catch(u){var a,r,s,o,l,n;console.error("❌ Auth Service: Login failed",{error:(null==(a=u.response)?void 0:a.data)||u.message,status:null==(r=u.response)?void 0:r.status});let e=(null==(o=u.response)||null==(s=o.data)?void 0:s.message)||"Login failed",t=null==(n=u.response)||null==(l=n.data)?void 0:l.errors;throw{...u,response:{...u.response,data:{success:!1,message:e,errors:t}}}}},logout:async()=>{try{console.log("\uD83D\uDD10 Auth Service: Starting user logout");let e=await t.FH.post("/logout");return e.data.success&&console.log("✅ Auth Service: Logout successful"),(0,t.rG)(),e.data}catch(r){var e,a;return console.error("❌ Auth Service: Logout failed",{error:(null==(e=r.response)?void 0:e.data)||r.message,status:null==(a=r.response)?void 0:a.status}),(0,t.rG)(),console.log("⚠️ Auth Service: Logout failed on server but performed complete auth clearance"),{success:!0,message:"Logged out locally"}}},getUserProfile:async()=>{try{console.log("\uD83D\uDD10 Auth Service: Fetching user profile");let e=await t.FH.get("/user/profile");return e.data.success&&console.log("✅ Auth Service: Profile fetched successfully",{userId:e.data.data.user.id,userName:e.data.data.user.name}),{success:e.data.success,data:{user:e.data.data.user}}}catch(t){var e,a,r,s;throw console.error("❌ Auth Service: Failed to fetch profile",{error:(null==(e=t.response)?void 0:e.data)||t.message,status:null==(a=t.response)?void 0:a.status}),{...t,response:{...t.response,data:{success:!1,message:(null==(s=t.response)||null==(r=s.data)?void 0:r.message)||"Failed to fetch profile"}}}}},updateUserProfile:async e=>{try{console.log("\uD83D\uDD10 Auth Service: Updating user profile",{hasName:!!e.name,hasBio:!!e.bio,hasAvatar:!!e.avatar});let a=new FormData;e.name&&a.append("name",e.name),void 0!==e.bio&&a.append("bio",e.bio),e.avatar&&(a.append("avatar",e.avatar),console.log("\uD83D\uDCCE Auth Service: Avatar file attached for profile update"));let r=await t.FH.put("/user/profile",a,{headers:{"Content-Type":"multipart/form-data"}});return r.data.success&&console.log("✅ Auth Service: Profile updated successfully",{userId:r.data.data.user.id,userName:r.data.data.user.name}),{success:r.data.success,data:{user:r.data.data.user}}}catch(u){var a,r,s,o,l,n;console.error("❌ Auth Service: Failed to update profile",{error:(null==(a=u.response)?void 0:a.data)||u.message,status:null==(r=u.response)?void 0:r.status});let e=(null==(o=u.response)||null==(s=o.data)?void 0:s.message)||"Failed to update profile",t=null==(n=u.response)||null==(l=n.data)?void 0:l.errors;throw{...u,response:{...u.response,data:{success:!1,message:e,errors:t}}}}},checkAuthStatus:async()=>{try{console.log("\uD83D\uDD10 Auth Service: Checking authentication status");let e=await t.FH.get("/user/profile"),a=e.data.success&&!!e.data.data.user;return console.log("✅ Auth Service: Auth status checked",{isAuthenticated:a,userId:a?e.data.data.user.id:null}),a}catch(a){var e;return console.log("⚠️ Auth Service: User not authenticated",{status:(null==(e=a.response)?void 0:e.status)||"Network Error"}),!1}},refreshUser:async()=>{try{console.log("\uD83D\uDD10 Auth Service: Refreshing user data");let e=await o.getUserProfile();return console.log("✅ Auth Service: User data refreshed successfully"),e}catch(e){return console.error("❌ Auth Service: Failed to refresh user data:",e),null}}},l=e=>{var a,r,s;let t=[],o=(null==(r=e.response)||null==(a=r.data)?void 0:a.error)||(null==(s=e.response)?void 0:s.data);return(null==o?void 0:o.errors)&&Object.values(o.errors).forEach(e=>{Array.isArray(e)&&t.push(...e)}),0===t.length&&(null==o?void 0:o.message)&&t.push(o.message),0===t.length&&e.message&&t.push(e.message),t.length>0?t:["An unexpected error occurred"]},n=(0,s.zD)("auth/checkAuthStatus",async(e,a)=>{let{rejectWithValue:r}=a;try{if(console.log("\uD83D\uDCE4 Auth Slice: Checking authentication status"),await o.checkAuthStatus())return(await o.getUserProfile()).data.user;return null}catch(e){return console.error("❌ Auth Slice: Auth status check failed",e.message),r({errors:["Failed to check authentication status"]})}}),u=(0,s.zD)("auth/register",async(e,a)=>{let{rejectWithValue:r}=a;try{return console.log("\uD83D\uDCE4 Auth Slice: Starting user registration"),(await o.register(e)).data}catch(e){var s;return console.error("❌ Auth Slice: Registration failed",(null==(s=e.response)?void 0:s.data)||e.message),r({errors:l(e)})}}),i=(0,s.zD)("auth/login",async(e,a)=>{let{rejectWithValue:r}=a;try{return console.log("\uD83D\uDCE4 Auth Slice: Starting user login"),(await o.login(e)).data}catch(e){var s;return console.error("❌ Auth Slice: Login failed",(null==(s=e.response)?void 0:s.data)||e.message),r({errors:l(e)})}}),d=(0,s.zD)("auth/logout",async()=>{try{return console.log("\uD83D\uDCE4 Auth Slice: Starting user logout"),await o.logout(),!0}catch(a){var e;return console.error("❌ Auth Slice: Logout failed",(null==(e=a.response)?void 0:e.data)||a.message),!0}}),c=(0,s.zD)("auth/getUserProfile",async(e,a)=>{let{rejectWithValue:r}=a;try{return console.log("\uD83D\uDCE4 Auth Slice: Fetching user profile"),(await o.getUserProfile()).data.user}catch(e){var s;return console.error("❌ Auth Slice: Get profile failed",(null==(s=e.response)?void 0:s.data)||e.message),r({errors:l(e)})}}),g=(0,s.zD)("auth/updateProfile",async(e,a)=>{let{rejectWithValue:r}=a;try{return console.log("\uD83D\uDCE4 Auth Slice: Updating user profile"),(await o.updateUserProfile(e)).data.user}catch(e){var s;return console.error("❌ Auth Slice: Update profile failed",(null==(s=e.response)?void 0:s.data)||e.message),r({errors:l(e)})}}),h=(0,s.zD)("auth/refreshUserData",async(e,a)=>{let{rejectWithValue:r}=a;try{console.log("\uD83D\uDCE4 Auth Slice: Refreshing user data");let e=await o.refreshUser();if(e)return e.data.user;throw Error("Failed to refresh user data")}catch(e){return console.error("❌ Auth Slice: Refresh user data failed",e.message),r({errors:["Failed to refresh user data"]})}}),p=(0,s.Z0)({name:"auth",initialState:{user:null,token:null,isAuthenticated:!1,isLoading:!1,error:null},reducers:{clearError:e=>{e.error=null,console.log("✅ Auth Slice: Error cleared")},clearAuth:e=>{e.user=null,e.token=null,e.isAuthenticated=!1,e.error=null,console.log("✅ Auth Slice: Auth data cleared")},setLoading:(e,a)=>{e.isLoading=a.payload},setUser:(e,a)=>{e.user=a.payload,console.log("✅ Auth Slice: User data updated",{userId:a.payload.id,userName:a.payload.name})}},extraReducers:e=>{e.addCase(n.pending,e=>{e.isLoading=!0,console.log("⏳ Auth Slice: Auth status check pending")}).addCase(n.fulfilled,(e,a)=>{e.isLoading=!1,a.payload?(e.user=a.payload,e.isAuthenticated=!0,console.log("✅ Auth Slice: Auth status check successful - user authenticated",{user:a.payload.name})):(e.user=null,e.isAuthenticated=!1,console.log("✅ Auth Slice: Auth status check successful - user not authenticated")),e.error=null}).addCase(n.rejected,(e,a)=>{e.isLoading=!1,e.user=null,e.isAuthenticated=!1;let r=a.payload;e.error=(null==r?void 0:r.errors)||[(null==r?void 0:r.message)||"Auth status check failed"],console.log("❌ Auth Slice: Auth status check rejected",e.error)}),e.addCase(u.pending,e=>{e.isLoading=!0,e.error=null,console.log("⏳ Auth Slice: Registration pending")}).addCase(u.fulfilled,(e,a)=>{e.isLoading=!1,e.user=a.payload.user,e.token=a.payload.token,e.isAuthenticated=!0,e.error=null,console.log("✅ Auth Slice: Registration successful",{user:a.payload.user.name,authenticated:!0})}).addCase(u.rejected,(e,a)=>{e.isLoading=!1;let r=a.payload;e.error=(null==r?void 0:r.errors)||["Registration failed"],console.log("❌ Auth Slice: Registration rejected",e.error)}),e.addCase(i.pending,e=>{e.isLoading=!0,e.error=null,console.log("⏳ Auth Slice: Login pending")}).addCase(i.fulfilled,(e,a)=>{e.isLoading=!1,e.user=a.payload.user,e.token=a.payload.token,e.isAuthenticated=!0,e.error=null,console.log("✅ Auth Slice: Login successful",{user:a.payload.user.name,authenticated:!0})}).addCase(i.rejected,(e,a)=>{e.isLoading=!1;let r=a.payload;e.error=(null==r?void 0:r.errors)||["Login failed"],console.log("❌ Auth Slice: Login rejected",e.error)}),e.addCase(d.pending,e=>{e.isLoading=!0,console.log("⏳ Auth Slice: Logout pending")}).addCase(d.fulfilled,e=>{e.isLoading=!1,e.user=null,e.token=null,e.isAuthenticated=!1,e.error=null,console.log("✅ Auth Slice: Logout successful")}).addCase(d.rejected,e=>{e.isLoading=!1,e.user=null,e.token=null,e.isAuthenticated=!1,e.error=null,console.log("⚠️ Auth Slice: Logout failed on server but local data cleared")}),e.addCase(c.pending,e=>{e.isLoading=!0,console.log("⏳ Auth Slice: Get profile pending")}).addCase(c.fulfilled,(e,a)=>{e.isLoading=!1,e.user=a.payload,e.error=null,console.log("✅ Auth Slice: Get profile successful",{user:a.payload.name})}).addCase(c.rejected,(e,a)=>{e.isLoading=!1;let r=a.payload;e.error=(null==r?void 0:r.errors)||[(null==r?void 0:r.message)||"Failed to fetch profile"],console.log("❌ Auth Slice: Get profile rejected",e.error)}),e.addCase(g.pending,e=>{e.isLoading=!0,console.log("⏳ Auth Slice: Update profile pending")}).addCase(g.fulfilled,(e,a)=>{e.isLoading=!1,e.user=a.payload,e.error=null,console.log("✅ Auth Slice: Update profile successful",{user:a.payload.name})}).addCase(g.rejected,(e,a)=>{e.isLoading=!1;let r=a.payload;e.error=(null==r?void 0:r.errors)||[(null==r?void 0:r.message)||"Failed to update profile"],console.log("❌ Auth Slice: Update profile rejected",e.error)}),e.addCase(h.pending,()=>{console.log("⏳ Auth Slice: Refresh user data pending")}).addCase(h.fulfilled,(e,a)=>{e.user=a.payload,e.error=null,console.log("✅ Auth Slice: Refresh user data successful",{user:a.payload.name})}).addCase(h.rejected,(e,a)=>{let r=a.payload;e.error=(null==r?void 0:r.errors)||[(null==r?void 0:r.message)||"Failed to refresh user data"],console.log("❌ Auth Slice: Refresh user data rejected",e.error)})}}),{clearError:f,clearAuth:A,setLoading:v,setUser:m}=p.actions,S=p.reducer}}]);